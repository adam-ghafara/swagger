openapi: 3.0.3
info:
  title: Adam Ghafara - Dokumen API
  description: >-
    API Swagger Web Adam
  contact:
    email: adam.ghafara.job@gmail.com
  license:
    name: Peda Package
    url: https://pkg.go.dev/github.com/adam-ghafara/peta-backend
  version: v1.0.0
externalDocs:
  description: Repo GCF
  url: https://github.com/adam-ghafara/gcf
servers:
  - url: https://asia-southeast2-gis-tester-401506.cloudfunctions.net/
  - url: https://northamerica-northeast1-gis-tester-401506.cloudfunctions.net/
  - url: https://us-central1-gis-tester-401506.cloudfunctions.net/
tags:
  - name: GET GIS Data
    description: Data Geo Spasial
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/adam-ghafara/gcf/
  - name: SignIn
    description: Login Token Authorize
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/adam-ghafara/gcf/
  - name: SignUp
    description: SignUp Akun
    externalDocs:
      description: Deskripsi dan Kode Program
      url: 
  - name: GIS Location
    description: Login Token Authorize
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/adam-ghafara/gcf/

paths:
  /GetLocation:
    get:
      tags:
        - GET GIS Data
      summary: Get Data Geospasial
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
  /loc-load:
    get:
      tags:
        - GIS Location
      summary: Get Data Geospasial
      description: List Data Geospasial
      operationId: getGeoJSON
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Peta'
        '400':
          description: Invalid status value
  /postSignIn:
    post:
      tags:
        - SignIn
      summary: Login get Token
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
  /postSignUp:
    post:
      tags:
        - SignUp
      summary: SignUp (Pakai Server asia-southeast2)
      description: Login and Get User Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/postSignUp'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/postSignUpResponse'
        '405':
          description: Invalid input
      security:
        - token:
            - write:apiKey
            - read:apiKey
components:
  schemas:
    Peta:
      type: object
      properties:
        type:
          type: string
        geometry:
          type: object
          properties:
            type: 
              type: string
            coordinates: 
              type: array
        properties:
          type: object
          properties:
            name:
              type: string
    User:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: secret
    LoginResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: signIn Success.
        token:
          type: string
          example: token dropped here
    postSignUp:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: 12345
    postSignUpResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: SignUp Success.
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/postSignIn'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/postSignInResponse'
  securitySchemes:
    token:
      type: apiKey
      name: token
      in: header
      
